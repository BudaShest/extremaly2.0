<?php

namespace app\modules\admin\models;

use app\models\Event as BaseEvent;
use app\modules\admin\models\interfaces\IFileWorkable;
use app\models\EventImage;
use Yii;

class Event extends BaseEvent implements IFileWorkable
{
    public $uploads;

    public function rules(): array
    {
        $rules = parent::rules();
        $rules[] = [['uploads'], 'file', 'extensions' => ['png', 'jpg', 'gif'], 'maxSize' => 1024 * 1024]; //todo возможно создать встроенный валидатор или как то вынести код
        return $rules;
    }

    //TODO дата не работает
//    public function load($data, $formName = null)
//    {
////        var_dump($data['Event']['from']);die;
//        $data['Event']['from'] = Yii::$app->formatter->asTimestamp($data['Event']['from']);
//        $data['Event']['until'] = Yii::$app->formatter->asTimestamp($data['Event']['until']);
//        return parent::load($data, $formName); // TODO: Change the autogenerated stub
//    }

    public function attributeLabels()
    {
        return [
            'name' => 'Имя',
            'offer' => 'Оффер',
            'from' => 'Дата начала',
            'until' => 'Дата конца',
            'description' => 'Описание',
            'age_restrictions' => 'Возрастные ограничения',
            'priority' => 'Приоритет',
            'is_horizontal' => 'Горизонтальная ли?',
            'place_id' => 'Место',
            'type_id' => 'Тип событий',
            'uploads' => 'Изображения'
        ];
    }

    public function deleteFiles(string $fileFolder = 'uploads'): bool
    {
        try{
            foreach($this->images as $image){
                if(!unlink($fileFolder.'/'.$image['image'])){
                    return false;
                }
            }
            return true;
        }catch (\Exception $e){
            $this->addError('uploads', $e);
            return false;
        }
    }

    public function upload(string $fileFolder = 'uploads'): bool
    {
        foreach($this->uploads as $upload){
            $newName = time().$upload->name;
            if(!$upload->saveAs($fileFolder . "/" .$newName)){
                return false;
            }
            $placeImage = new EventImage(['image'=>$newName]);
            $this->link('images', $placeImage);
        }
        return true;
    }
}